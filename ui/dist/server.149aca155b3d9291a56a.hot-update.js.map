{"version":3,"sources":["webpack:///./src/IssueEdit.jsx"],"names":["IssueEdit","React","Component","fetchData","match","showError","query","params","id","result","graphQLFetch","constructor","issue","store","initialData","state","invalidFields","showingValidation","toastVisible","toastMessage","toastType","onChange","bind","handleSubmit","onValidityChange","showValidation","dismissValidation","showSuccess","dismissToast","componentDidMount","loadData","componentDidUpdate","prevProps","prevId","props","event","naturalValue","name","value","textValue","target","undefined","setState","prevState","valid","e","preventDefault","Object","keys","length","created","changes","data","issueUpdate","x","Number","message","render","propsId","validationMessage","console","log","title","status","owner","effort","description","due","ControlLabel","toDateString","TextInput","NumInput","DateInput"],"mappings":"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","file":"server.149aca155b3d9291a56a.hot-update.js","sourcesContent":["import React from \"react\";\r\nimport graphQLFetch from \"./graphQLFetch\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NumInput from \"./NumInput.jsx\";\r\nimport DateInput from \"./DateInput.jsx\";\r\nimport TextInput from \"./TextInput.jsx\";\r\nimport Toast from \"./Toast.jsx\";\r\nimport Store from \"./Store.js\";\r\nimport {\r\n  Button,\r\n  Badge,\r\n  Col,\r\n  Panel,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  ButtonToolbar,\r\n  Alert,\r\n  ButtonGroup\r\n} from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nexport default class IssueEdit extends React.Component {\r\n  static async fetchData(match, showError) {\r\n    const query = `query issue($id:Int!){\r\n      issue(id:$id){\r\n        id title status owner\r\n        effort created due description\r\n      }\r\n    }`;\r\n    const {\r\n      params: { id }\r\n    } = match;\r\n    const result = await graphQLFetch(query, { id }, showError);\r\n    return result;\r\n  }\r\n  constructor() {\r\n    super();\r\n    const issue = store.initialData ? store.initialData.issue : null;\r\n    delete store.initialData;\r\n    this.state = {\r\n      issue,\r\n      invalidFields: {},\r\n      showingValidation: false,\r\n      toastVisible: false,\r\n      toastMessage: \"\",\r\n      toastType: \"danger\"\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onValidityChange = this.onValidityChange.bind(this);\r\n    this.showValidation = this.showValidation.bind(this);\r\n    this.dismissValidation = this.dismissValidation.bind(this);\r\n    this.showSuccess = this.showSuccess.bind(this);\r\n    this.showError = this.showError.bind(this);\r\n    this.dismissToast = this.dismissToast.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: {\r\n        params: { id: prevId }\r\n      }\r\n    } = prevProps;\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n    if (id !== prevId) {\r\n      this.loadData();\r\n    }\r\n  }\r\n  onChange(event, naturalValue) {\r\n    const { name, value: textValue } = event.target;\r\n    const value = naturalValue === undefined ? textValue : naturalValue;\r\n    this.setState(prevState => ({\r\n      issue: { ...prevState.issue, [name]: value }\r\n    }));\r\n  }\r\n\r\n  onValidityChange(event, valid) {\r\n    const { name } = event.target;\r\n    this.setState(prevState => {\r\n      const invalidFields = { ...prevState.invalidFields, [name]: !valid };\r\n      if (valid) delete invalidFields[name];\r\n      return { invalidFields };\r\n    });\r\n  }\r\n\r\n  async handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.showValidation();\r\n    const { issue, invalidFields } = this.state;\r\n    if (Object.keys(invalidFields).length !== 0) return;\r\n    const query = `mutation issueUpdate(\r\n   $id:Int!\r\n   $changes:IssueUpdateInputs!\r\n    )\r\n    {\r\n      issueUpdate(\r\n        id:$id\r\n        changes:$changes\r\n      ){\r\n        id title status owner effort\r\n        created due description\r\n      }\r\n    }`;\r\n    const { id, created, ...changes } = issue;\r\n    const data = await graphQLFetch(query, { changes, id }, this.showError);\r\n    if (data) {\r\n      this.setState({ issue: data.issueUpdate });\r\n      this.showSuccess(\"Issue updated successfully\");\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const query = `query issue($id:Int!){\r\n   issue(id:$id){\r\n     id title status owner effort created due description\r\n   }\r\n  }`;\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n    const x = Number(id);\r\n    const data = await graphQLFetch(query, { id: x }, this.showError);\r\n    this.setState({ issue: data ? data.issue : {}, invalidFields: {} });\r\n  }\r\n  showValidation() {\r\n    this.setState({ showingValidation: true });\r\n  }\r\n  dismissValidation() {\r\n    this.setState({ showingValidation: false });\r\n  }\r\n  showSuccess(message) {\r\n    this.setState({\r\n      toastVisible: true,\r\n      toastMessage: message,\r\n      toastType: \"success\"\r\n    });\r\n  }\r\n  showError(message) {\r\n    this.setState({\r\n      toastVisible: true,\r\n      toastMessage: message,\r\n      toastType: \"danger\"\r\n    });\r\n  }\r\n  dismissToast() {\r\n    this.setState({\r\n      toastVisible: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      issue: { id }\r\n    } = this.state;\r\n    const {\r\n      match: {\r\n        params: { id: propsId }\r\n      }\r\n    } = this.props;\r\n    if (id == null) {\r\n      if (propsId !== null) {\r\n        return <h3>{`Issue with ID ${propsId} not found.`}</h3>;\r\n      }\r\n\r\n      return null;\r\n    }\r\n    const { toastVisible, toastMessage, toastType } = this.state;\r\n    const { invalidFields, showingValidation } = this.state;\r\n    let validationMessage;\r\n    console.log(invalidFields);\r\n    if (Object.keys(invalidFields).length !== 0 && showingValidation) {\r\n      validationMessage = (\r\n        <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\r\n          Please correct invalid fiels before submitting.\r\n        </Alert>\r\n      );\r\n    }\r\n    const {\r\n      issue: { title, status }\r\n    } = this.state;\r\n    const {\r\n      issue: { owner, effort, description }\r\n    } = this.state;\r\n    const {\r\n      issue: { created, due }\r\n    } = this.state;\r\n\r\n    return (\r\n      <Panel>\r\n        <Panel.Heading>\r\n          <Panel.Title>{`Editing issue: ${id}`}</Panel.Title>\r\n        </Panel.Heading>\r\n        <Panel.Body>\r\n          <Form horizontal onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\r\n                Created\r\n              </Col>\r\n              <Col sm={9}>\r\n                <FormControl.Static>\r\n                  {created.toDateString()}\r\n                </FormControl.Static>\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\r\n                Status\r\n              </Col>\r\n              <Col sm={9}>\r\n                <FormControl\r\n                  componentClass=\"select\"\r\n                  name=\"status\"\r\n                  value={status}\r\n                  onChange={this.onChange}\r\n                >\r\n                  <option value=\"New\">New</option>\r\n                  <option value=\"Assigned\">Assigned</option>\r\n                  <option value=\"Fixed\">Fixed</option>\r\n                  <option value=\"Closed\">Closed</option>\r\n                </FormControl>\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\r\n                Owner\r\n              </Col>\r\n              <Col sm={9}>\r\n                <FormControl\r\n                  componentClass={TextInput}\r\n                  name=\"owner\"\r\n                  value={owner}\r\n                  onChange={this.onChange}\r\n                  key={id}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\r\n                Effort\r\n              </Col>\r\n              <Col sm={9}>\r\n                <FormControl\r\n                  componentClass={NumInput}\r\n                  name=\"effort\"\r\n                  value={effort}\r\n                  onChange={this.onChange}\r\n                  key={id}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup validationState={invalidFields.due ? \"error\" : null}>\r\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\r\n                Due\r\n              </Col>\r\n              <Col sm={9}>\r\n                <FormControl\r\n                  componentClass={DateInput}\r\n                  onValidityChange={this.onValidityChange}\r\n                  name=\"due\"\r\n                  value={due}\r\n                  onChange={this.onChange}\r\n                  key={id}\r\n                />\r\n                <FormControl.Feedback />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\r\n                Title\r\n              </Col>\r\n              <Col sm={9}>\r\n                <FormControl\r\n                  componentClass={TextInput}\r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={this.onChange}\r\n                  key={id}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\r\n                Description\r\n              </Col>\r\n              <Col sm={9}>\r\n                <FormControl\r\n                  componentClass={TextInput}\r\n                  tag=\"textarea\"\r\n                  name=\"description\"\r\n                  rows={8}\r\n                  cols={50}\r\n                  value={description}\r\n                  onChange={this.onChange}\r\n                  key={id}\r\n                />\r\n              </Col>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Col smOffset={2} sm={6} componentClass={ControlLabel}>\r\n                <ButtonToolbar>\r\n                  <ButtonGroup>\r\n                    <Button bsStyle=\"primary\" type=\"submit\">\r\n                      Submit\r\n                    </Button>\r\n                    <LinkContainer to=\"/issues\">\r\n                      <Button bsStyle=\"link\">Back</Button>\r\n                    </LinkContainer>\r\n                  </ButtonGroup>\r\n                </ButtonToolbar>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Col smOffset={2} sm={9}>\r\n                {validationMessage}\r\n              </Col>\r\n            </FormGroup>\r\n          </Form>\r\n        </Panel.Body>\r\n        <Panel.Footer>\r\n          <Link to={`/edit/${id - 1}`}>\r\n            <Badge> Previous </Badge>\r\n          </Link>\r\n          {\"  | \"}\r\n          <Link to={`/edit/${id + 1}`}>\r\n            <Badge> Next </Badge>\r\n          </Link>\r\n        </Panel.Footer>\r\n        <Toast\r\n          showing={toastVisible}\r\n          onDismiss={this.dismissToast}\r\n          bsStyle={toastType}\r\n        >\r\n          {toastMessage}\r\n        </Toast>\r\n      </Panel>\r\n    );\r\n    return null;\r\n  }\r\n}\r\n"],"sourceRoot":""}