{"version":3,"sources":["webpack:///./src/IssueReport.jsx"],"names":["statuses","IssueReport","React","Component","fetchData","match","search","showError","params","URLSearchParams","vars","get","status","effortMin","parseInt","Number","isNaN","effortMax","query","data","graphQLFetch","constructor","props","stats","store","initialData","issueCounts","state","componentDidMount","loadData","componentDidUpdate","prevProps","location","prevSearch","setState","render","headerColumns","map","statRows","counts","owner","IssueReportWithToast","withToast"],"mappings":"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","file":"server.6f187e8e1a70883faf8b.hot-update.js","sourcesContent":["import React from \"react\";\r\nimport { Panel, Table } from \"react-bootstrap\";\r\n\r\nimport IssueFilter from \"./IssueFilter.jsx\";\r\nimport withToast from \"./withToast.jsx\";\r\nimport graphQLFetch from \"./graphQLFetch.js\";\r\nimport store from \"./Store.js\";\r\n\r\nconst statuses = [\"New\", \"Assigned\", \"Fixed\", \"Closed\"];\r\n\r\nclass IssueReport extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search);\r\n    const vars = {};\r\n    if (params.get(\"status\")) vars.status = params.get(\"status\");\r\n\r\n    const effortMin = parseInt(params.get(\"effortMin\"), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get(\"effortMax\"), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n\r\n    const query = `query List(\r\n      $status: StatusType\r\n      $effortMin: Int\r\n      $effortMax: Int\r\n    ) {\r\n      issueCounts(\r\n        status: $status\r\n        effortMin: $effortMin\r\n        effortMax: $effortMax\r\n      ) {\r\n        owner New Assigned Fixed Closed\r\n      }\r\n    }`;\r\n    const data = await graphQLFetch(query, vars, showError);\r\n    return data;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const stats = store.initialData ? store.initialData.issueCounts : null;\r\n    delete store.initialData;\r\n    this.state = { stats };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { stats } = this.state;\r\n    if (stats == null) this.loadData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      location: { search: prevSearch },\r\n    } = prevProps;\r\n    const {\r\n      location: { search },\r\n    } = this.props;\r\n    if (prevSearch !== search) {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    const { match, showError } = this.props;\r\n    const data = await IssueReport.fetchData(match, search, showError);\r\n    if (data) {\r\n      this.setState({ stats: data.issueCounts });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { stats } = this.state;\r\n    if (stats == null) return null;\r\n\r\n    const headerColumns = statuses.map((status) => (\r\n      <th key={status}>{status}</th>\r\n    ));\r\n\r\n    const statRows = stats.map((counts) => (\r\n      <tr key={counts.owner}>\r\n        <td>{counts.owner}</td>\r\n        {statuses.map((status) => (\r\n          <td key={status}>{counts[status]}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        <Panel>\r\n          <Panel.Heading>\r\n            <Panel.Title toggle>Filter</Panel.Title>\r\n          </Panel.Heading>\r\n          <Panel.Body collapsible>\r\n            <IssueFilter urlBase=\"/report\" />\r\n          </Panel.Body>\r\n        </Panel>\r\n        <Table bordered condensed hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th />\r\n              {headerColumns}\r\n            </tr>\r\n          </thead>\r\n          <tbody>{statRows}</tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst IssueReportWithToast = withToast(IssueReport);\r\nIssueReportWithToast.fetchData = IssueReport.fetchData;\r\n\r\nexport default IssueReportWithToast;\r\n"],"sourceRoot":""}