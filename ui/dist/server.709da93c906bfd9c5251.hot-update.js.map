{"version":3,"sources":["webpack:///./src/IssueEdit.jsx"],"names":["IssueEdit","React","Component","fetchData","match","search","showError","query","params","id","x","Number","result","graphQLFetch","constructor","issue","Store","initialData","state","invalidFields","showingValidation","onChange","bind","handleSubmit","onValidityChange","showValidation","dismissValidation","componentDidMount","loadData","componentDidUpdate","prevProps","prevId","props","event","naturalValue","name","value","textValue","target","undefined","setState","prevState","valid","e","preventDefault","showSuccess","Object","keys","length","created","changes","data","issueUpdate","render","propsId","validationMessage","console","log","title","status","owner","effort","description","due","user","context","ControlLabel","toDateString","TextInput","NumInput","DateInput","signedIn","contextType","UserContext","IssueEditWithToast","withToast"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAaA;;AACA,MAAMA,SAAN,SAAwBC,4CAAK,CAACC,SAA9B,CAAwC;AACtC,eAAaC,SAAb,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,SAAtC,EAAiD;AAC/C,UAAMC,KAAK,GAAI;;;;;MAAf;AAMA,UAAM;AACJC,YAAM,EAAE;AAAEC;AAAF;AADJ,QAEFL,KAFJ;AAGA,UAAMM,CAAC,GAAGC,MAAM,CAACF,EAAD,CAAhB;AACA,UAAMG,MAAM,GAAG,MAAMC,6DAAY,CAACN,KAAD,EAAQ;AAAEE,QAAE,EAAEC;AAAN,KAAR,EAAmBJ,SAAnB,CAAjC;AACA,WAAOM,MAAP;AACD;;AACDE,aAAW,GAAG;AACZ;AACA,UAAMC,KAAK,GAAGC,iDAAK,CAACC,WAAN,GAAoBD,iDAAK,CAACC,WAAN,CAAkBF,KAAtC,GAA8C,IAA5D;AACA,WAAOC,iDAAK,CAACC,WAAb;AACA,SAAKC,KAAL,GAAa;AACXH,WADW;AAEXI,mBAAa,EAAE,EAFJ;AAGXC,uBAAiB,EAAE;AAHR,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBJ,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDK,mBAAiB,GAAG;AAClB,UAAM;AAAEZ;AAAF,QAAY,KAAKG,KAAvB;AACA,QAAIH,KAAK,IAAI,IAAb,EAAmB,KAAKa,QAAL;AACpB;;AAEDC,oBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AACJ1B,WAAK,EAAE;AACLI,cAAM,EAAE;AAAEC,YAAE,EAAEsB;AAAN;AADH;AADH,QAIFD,SAJJ;AAKA,UAAM;AACJ1B,WAAK,EAAE;AACLI,cAAM,EAAE;AAAEC;AAAF;AADH;AADH,QAIF,KAAKuB,KAJT;;AAKA,QAAIvB,EAAE,KAAKsB,MAAX,EAAmB;AACjB,WAAKH,QAAL;AACD;AACF;;AACDP,UAAQ,CAACY,KAAD,EAAQC,YAAR,EAAsB;AAC5B,UAAM;AAAEC,UAAF;AAAQC,WAAK,EAAEC;AAAf,QAA6BJ,KAAK,CAACK,MAAzC;AACA,UAAMF,KAAK,GAAGF,YAAY,KAAKK,SAAjB,GAA6BF,SAA7B,GAAyCH,YAAvD;AACA,SAAKM,QAAL,CAAeC,SAAD,KAAgB;AAC5B1B,WAAK,EAAE,EAAE,GAAG0B,SAAS,CAAC1B,KAAf;AAAsB,SAACoB,IAAD,GAAQC;AAA9B;AADqB,KAAhB,CAAd;AAGD;;AAEDZ,kBAAgB,CAACS,KAAD,EAAQS,KAAR,EAAe;AAC7B,UAAM;AAAEP;AAAF,QAAWF,KAAK,CAACK,MAAvB;AACA,SAAKE,QAAL,CAAeC,SAAD,IAAe;AAC3B,YAAMtB,aAAa,GAAG,EAAE,GAAGsB,SAAS,CAACtB,aAAf;AAA8B,SAACgB,IAAD,GAAQ,CAACO;AAAvC,OAAtB;AACA,UAAIA,KAAJ,EAAW,OAAOvB,aAAa,CAACgB,IAAD,CAApB;AACX,aAAO;AAAEhB;AAAF,OAAP;AACD,KAJD;AAKD;;AAED,QAAMI,YAAN,CAAmBoB,CAAnB,EAAsB;AACpBA,KAAC,CAACC,cAAF;AACA,SAAKnB,cAAL;AACA,UAAM;AAAEV,WAAF;AAASI;AAAT,QAA2B,KAAKD,KAAtC;AACA,UAAM;AAAE2B,iBAAF;AAAevC;AAAf,QAA6B,KAAK0B,KAAxC;AACA,QAAIc,MAAM,CAACC,IAAP,CAAY5B,aAAZ,EAA2B6B,MAA3B,KAAsC,CAA1C,EAA6C;AAC7C,UAAMzC,KAAK,GAAI;;;;;;;;;;;;MAAf;AAaA,UAAM;AAAEE,QAAF;AAAMwC,aAAN;AAAe,SAAGC;AAAlB,QAA8BnC,KAApC;AACA,UAAMoC,IAAI,GAAG,MAAMtC,6DAAY,CAACN,KAAD,EAAQ;AAAE2C,aAAF;AAAWzC;AAAX,KAAR,EAAyBH,SAAzB,CAA/B;;AACA,QAAI6C,IAAJ,EAAU;AACR,WAAKX,QAAL,CAAc;AAAEzB,aAAK,EAAEoC,IAAI,CAACC;AAAd,OAAd;AACAP,iBAAW,CAAC,4BAAD,CAAX;AACD;AACF;;AAED,QAAMjB,QAAN,GAAiB;AACf,UAAMrB,KAAK,GAAI;;;;IAAf;AAKA,UAAM;AAAEH,WAAF;AAASE;AAAT,QAAuB,KAAK0B,KAAlC;AACA,UAAMmB,IAAI,GAAG,MAAMnD,SAAS,CAACG,SAAV,CAAoBC,KAApB,EAA2B,IAA3B,EAAiCE,SAAjC,CAAnB;AACA,SAAKkC,QAAL,CAAc;AAAEzB,WAAK,EAAEoC,IAAI,GAAGA,IAAI,CAACpC,KAAR,GAAgB,EAA7B;AAAiCI,mBAAa,EAAE;AAAhD,KAAd;AACD;;AACDM,gBAAc,GAAG;AACf,SAAKe,QAAL,CAAc;AAAEpB,uBAAiB,EAAE;AAArB,KAAd;AACD;;AACDM,mBAAiB,GAAG;AAClB,SAAKc,QAAL,CAAc;AAAEpB,uBAAiB,EAAE;AAArB,KAAd;AACD;;AAEDiC,QAAM,GAAG;AACP,UAAM;AAAEtC;AAAF,QAAY,KAAKG,KAAvB;AACA,QAAIH,KAAK,IAAI,IAAb,EAAmB,OAAO,IAAP;AACnB,UAAM;AACJA,WAAK,EAAE;AAAEN;AAAF;AADH,QAEF,KAAKS,KAFT;AAGA,UAAM;AACJd,WAAK,EAAE;AACLI,cAAM,EAAE;AAAEC,YAAE,EAAE6C;AAAN;AADH;AADH,QAIF,KAAKtB,KAJT;AAKA,QAAItB,CAAC,GAAG4C,OAAR;;AACA,QAAI7C,EAAE,IAAI,IAAV,EAAgB;AACd,UAAI6C,OAAO,KAAK,IAAhB,EAAsB;AACpB,eACE,wEACE,uEAAM,iBAAgBA,OAAQ,aAA9B,CADF,CADF;AAKD;;AAED,aAAO,IAAP;AACD;;AAED,UAAM;AAAEnC,mBAAF;AAAiBC;AAAjB,QAAuC,KAAKF,KAAlD;AACA,QAAIqC,iBAAJ;AACAC,WAAO,CAACC,GAAR,CAAYtC,aAAZ;;AACA,QAAI2B,MAAM,CAACC,IAAP,CAAY5B,aAAZ,EAA2B6B,MAA3B,KAAsC,CAAtC,IAA2C5B,iBAA/C,EAAkE;AAChEmC,uBAAiB,GACf,2DAAC,sDAAD;AAAO,eAAO,EAAC,QAAf;AAAwB,iBAAS,EAAE,KAAK7B;AAAxC,2DADF;AAKD;;AACD,UAAM;AACJX,WAAK,EAAE;AAAE2C,aAAF;AAASC;AAAT;AADH,QAEF,KAAKzC,KAFT;AAGA,UAAM;AACJH,WAAK,EAAE;AAAE6C,aAAF;AAASC,cAAT;AAAiBC;AAAjB;AADH,QAEF,KAAK5C,KAFT;AAGA,UAAM;AACJH,WAAK,EAAE;AAAEkC,eAAF;AAAWc;AAAX;AADH,QAEF,KAAK7C,KAFT;AAIA,UAAM8C,IAAI,GAAG,KAAKC,OAAlB;AAEA,WACE,2DAAC,sDAAD,QACE,2DAAC,sDAAD,CAAO,OAAP,QACE,2DAAC,sDAAD,CAAO,KAAP,QAAe,kBAAiBxD,EAAG,EAAnC,CADF,CADF,EAIE,2DAAC,sDAAD,CAAO,IAAP,QACE,2DAAC,qDAAD;AAAM,gBAAU,MAAhB;AAAiB,cAAQ,EAAE,KAAKc;AAAhC,OACE,2DAAC,0DAAD,QACE,2DAAC,oDAAD;AAAK,QAAE,EAAE,CAAT;AAAY,QAAE,EAAE,CAAhB;AAAmB,oBAAc,EAAE2C,6DAAYA;AAA/C,iBADF,EAIE,2DAAC,oDAAD;AAAK,QAAE,EAAE;AAAT,OACE,2DAAC,4DAAD,CAAa,MAAb,QACGjB,OAAO,CAACkB,YAAR,EADH,CADF,CAJF,CADF,EAYE,2DAAC,0DAAD,QACE,2DAAC,oDAAD;AAAK,QAAE,EAAE,CAAT;AAAY,QAAE,EAAE,CAAhB;AAAmB,oBAAc,EAAED,6DAAYA;AAA/C,gBADF,EAIE,2DAAC,oDAAD;AAAK,QAAE,EAAE;AAAT,OACE,2DAAC,4DAAD;AACE,oBAAc,EAAC,QADjB;AAEE,UAAI,EAAC,QAFP;AAGE,WAAK,EAAEP,MAHT;AAIE,cAAQ,EAAE,KAAKtC;AAJjB,OAME;AAAQ,WAAK,EAAC;AAAd,aANF,EAOE;AAAQ,WAAK,EAAC;AAAd,kBAPF,EAQE;AAAQ,WAAK,EAAC;AAAd,eARF,EASE;AAAQ,WAAK,EAAC;AAAd,gBATF,CADF,CAJF,CAZF,EA+BE,2DAAC,0DAAD,QACE,2DAAC,oDAAD;AAAK,QAAE,EAAE,CAAT;AAAY,QAAE,EAAE,CAAhB;AAAmB,oBAAc,EAAE6C,6DAAYA;AAA/C,eADF,EAIE,2DAAC,oDAAD;AAAK,QAAE,EAAE;AAAT,OACE,2DAAC,4DAAD;AACE,oBAAc,EAAEE,sDADlB;AAEE,UAAI,EAAC,OAFP;AAGE,WAAK,EAAER,KAHT;AAIE,cAAQ,EAAE,KAAKvC,QAJjB;AAKE,SAAG,EAAEZ;AALP,MADF,CAJF,CA/BF,EA8CE,2DAAC,0DAAD,QACE,2DAAC,oDAAD;AAAK,QAAE,EAAE,CAAT;AAAY,QAAE,EAAE,CAAhB;AAAmB,oBAAc,EAAEyD,6DAAYA;AAA/C,gBADF,EAIE,2DAAC,oDAAD;AAAK,QAAE,EAAE;AAAT,OACE,2DAAC,4DAAD;AACE,oBAAc,EAAEG,qDADlB;AAEE,UAAI,EAAC,QAFP;AAGE,WAAK,EAAER,MAHT;AAIE,cAAQ,EAAE,KAAKxC,QAJjB;AAKE,SAAG,EAAEZ;AALP,MADF,CAJF,CA9CF,EA6DE,2DAAC,0DAAD;AAAW,qBAAe,EAAEU,aAAa,CAAC4C,GAAd,GAAoB,OAApB,GAA8B;AAA1D,OACE,2DAAC,oDAAD;AAAK,QAAE,EAAE,CAAT;AAAY,QAAE,EAAE,CAAhB;AAAmB,oBAAc,EAAEG,6DAAYA;AAA/C,aADF,EAIE,2DAAC,oDAAD;AAAK,QAAE,EAAE;AAAT,OACE,2DAAC,4DAAD;AACE,oBAAc,EAAEI,sDADlB;AAEE,sBAAgB,EAAE,KAAK9C,gBAFzB;AAGE,UAAI,EAAC,KAHP;AAIE,WAAK,EAAEuC,GAJT;AAKE,cAAQ,EAAE,KAAK1C,QALjB;AAME,SAAG,EAAEZ;AANP,MADF,EASE,2DAAC,4DAAD,CAAa,QAAb,OATF,CAJF,CA7DF,EA8EE,2DAAC,0DAAD,QACE,2DAAC,oDAAD;AAAK,QAAE,EAAE,CAAT;AAAY,QAAE,EAAE,CAAhB;AAAmB,oBAAc,EAAEyD,6DAAYA;AAA/C,eADF,EAIE,2DAAC,oDAAD;AAAK,QAAE,EAAE;AAAT,OACE,2DAAC,4DAAD;AACE,oBAAc,EAAEE,sDADlB;AAEE,UAAI,EAAC,OAFP;AAGE,WAAK,EAAEV,KAHT;AAIE,cAAQ,EAAE,KAAKrC,QAJjB;AAKE,SAAG,EAAEZ;AALP,MADF,CAJF,CA9EF,EA6FE,2DAAC,0DAAD,QACE,2DAAC,oDAAD;AAAK,QAAE,EAAE,CAAT;AAAY,QAAE,EAAE,CAAhB;AAAmB,oBAAc,EAAEyD,6DAAYA;AAA/C,qBADF,EAIE,2DAAC,oDAAD;AAAK,QAAE,EAAE;AAAT,OACE,2DAAC,4DAAD;AACE,oBAAc,EAAEE,sDADlB;AAEE,SAAG,EAAC,UAFN;AAGE,UAAI,EAAC,aAHP;AAIE,UAAI,EAAE,CAJR;AAKE,UAAI,EAAE,EALR;AAME,WAAK,EAAEN,WANT;AAOE,cAAQ,EAAE,KAAKzC,QAPjB;AAQE,SAAG,EAAEZ;AARP,MADF,CAJF,CA7FF,EA+GE,2DAAC,0DAAD,QACE,2DAAC,oDAAD;AAAK,cAAQ,EAAE,CAAf;AAAkB,QAAE,EAAE,CAAtB;AAAyB,oBAAc,EAAEyD,6DAAYA;AAArD,OACE,2DAAC,8DAAD,QACE,2DAAC,4DAAD,QACE,2DAAC,uDAAD;AACE,aAAO,EAAC,SADV;AAEE,UAAI,EAAC,QAFP;AAGE,cAAQ,EAAE,CAACF,IAAI,CAACO;AAHlB,gBADF,EAQE,2DAAC,qEAAD;AAAe,QAAE,EAAC;AAAlB,OACE,2DAAC,uDAAD;AAAQ,aAAO,EAAC;AAAhB,cADF,CARF,CADF,CADF,CADF,CA/GF,EAiIE,2DAAC,0DAAD,QACE,2DAAC,oDAAD;AAAK,cAAQ,EAAE,CAAf;AAAkB,QAAE,EAAE;AAAtB,OACGhB,iBADH,CADF,CAjIF,CADF,CAJF,EA6IE,2DAAC,sDAAD,CAAO,MAAP,QACE,2DAAC,qDAAD;AAAM,QAAE,EAAG,SAAQ9C,EAAE,GAAG,CAAE;AAA1B,OACE,2DAAC,sDAAD,qBADF,CADF,EAIG,MAJH,EAKE,2DAAC,qDAAD;AAAM,QAAE,EAAG,SAAQA,EAAE,GAAG,CAAE;AAA1B,OACE,2DAAC,sDAAD,iBADF,CALF,CA7IF,CADF;AAyJA,WAAO,IAAP;AACD;;AAxTqC;;AA0TxCT,SAAS,CAACwE,WAAV,GAAwBC,uDAAxB;AACA,MAAMC,kBAAkB,GAAGC,8DAAS,CAAC3E,SAAD,CAApC;AACA0E,kBAAkB,CAACvE,SAAnB,GAA+BH,SAAS,CAACG,SAAzC;AACeuE,iFAAf,E","file":"server.709da93c906bfd9c5251.hot-update.js","sourcesContent":["import React from \"react\";\nimport graphQLFetch from \"./graphQLFetch\";\nimport { Link } from \"react-router-dom\";\nimport NumInput from \"./NumInput.jsx\";\nimport DateInput from \"./DateInput.jsx\";\nimport TextInput from \"./TextInput.jsx\";\nimport Toast from \"./Toast.jsx\";\nimport Store from \"./Store.js\";\nimport withToast from \"./withToast.jsx\";\nimport UserContext from \"./UserContext.js\";\n\nimport {\n  Button,\n  Badge,\n  Col,\n  Panel,\n  Form,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  ButtonToolbar,\n  Alert,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nclass IssueEdit extends React.Component {\n  static async fetchData(match, search, showError) {\n    const query = `query issue($id:Int!){\n      issue(id:$id){\n        id title status owner\n        effort created due description\n      }\n    }`;\n    const {\n      params: { id },\n    } = match;\n    const x = Number(id);\n    const result = await graphQLFetch(query, { id: x }, showError);\n    return result;\n  }\n  constructor() {\n    super();\n    const issue = Store.initialData ? Store.initialData.issue : null;\n    delete Store.initialData;\n    this.state = {\n      issue,\n      invalidFields: {},\n      showingValidation: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onValidityChange = this.onValidityChange.bind(this);\n    this.showValidation = this.showValidation.bind(this);\n    this.dismissValidation = this.dismissValidation.bind(this);\n  }\n\n  componentDidMount() {\n    const { issue } = this.state;\n    if (issue == null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      match: {\n        params: { id: prevId },\n      },\n    } = prevProps;\n    const {\n      match: {\n        params: { id },\n      },\n    } = this.props;\n    if (id !== prevId) {\n      this.loadData();\n    }\n  }\n  onChange(event, naturalValue) {\n    const { name, value: textValue } = event.target;\n    const value = naturalValue === undefined ? textValue : naturalValue;\n    this.setState((prevState) => ({\n      issue: { ...prevState.issue, [name]: value },\n    }));\n  }\n\n  onValidityChange(event, valid) {\n    const { name } = event.target;\n    this.setState((prevState) => {\n      const invalidFields = { ...prevState.invalidFields, [name]: !valid };\n      if (valid) delete invalidFields[name];\n      return { invalidFields };\n    });\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    this.showValidation();\n    const { issue, invalidFields } = this.state;\n    const { showSuccess, showError } = this.props;\n    if (Object.keys(invalidFields).length !== 0) return;\n    const query = `mutation issueUpdate(\n   $id:Int!\n   $changes:IssueUpdateInputs!\n    )\n    {\n      issueUpdate(\n        id:$id\n        changes:$changes\n      ){\n        id title status owner effort\n        created due description\n      }\n    }`;\n    const { id, created, ...changes } = issue;\n    const data = await graphQLFetch(query, { changes, id }, showError);\n    if (data) {\n      this.setState({ issue: data.issueUpdate });\n      showSuccess(\"Issue updated successfully\");\n    }\n  }\n\n  async loadData() {\n    const query = `query issue($id:Int!){\n   issue(id:$id){\n     id title status owner effort created due description\n   }\n  }`;\n    const { match, showError } = this.props;\n    const data = await IssueEdit.fetchData(match, null, showError);\n    this.setState({ issue: data ? data.issue : {}, invalidFields: {} });\n  }\n  showValidation() {\n    this.setState({ showingValidation: true });\n  }\n  dismissValidation() {\n    this.setState({ showingValidation: false });\n  }\n\n  render() {\n    const { issue } = this.state;\n    if (issue == null) return null;\n    const {\n      issue: { id },\n    } = this.state;\n    const {\n      match: {\n        params: { id: propsId },\n      },\n    } = this.props;\n    let x = propsId;\n    if (id == null) {\n      if (propsId !== null) {\n        return (\n          <div>\n            <h3>{`Issue with ID ${propsId} not found.`}</h3>\n          </div>\n        );\n      }\n\n      return null;\n    }\n\n    const { invalidFields, showingValidation } = this.state;\n    let validationMessage;\n    console.log(invalidFields);\n    if (Object.keys(invalidFields).length !== 0 && showingValidation) {\n      validationMessage = (\n        <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\n          Please correct invalid fiels before submitting.\n        </Alert>\n      );\n    }\n    const {\n      issue: { title, status },\n    } = this.state;\n    const {\n      issue: { owner, effort, description },\n    } = this.state;\n    const {\n      issue: { created, due },\n    } = this.state;\n\n    const user = this.context;\n\n    return (\n      <Panel>\n        <Panel.Heading>\n          <Panel.Title>{`Editing issue: ${id}`}</Panel.Title>\n        </Panel.Heading>\n        <Panel.Body>\n          <Form horizontal onSubmit={this.handleSubmit}>\n            <FormGroup>\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\n                Created\n              </Col>\n              <Col sm={9}>\n                <FormControl.Static>\n                  {created.toDateString()}\n                </FormControl.Static>\n              </Col>\n            </FormGroup>\n\n            <FormGroup>\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\n                Status\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass=\"select\"\n                  name=\"status\"\n                  value={status}\n                  onChange={this.onChange}\n                >\n                  <option value=\"New\">New</option>\n                  <option value=\"Assigned\">Assigned</option>\n                  <option value=\"Fixed\">Fixed</option>\n                  <option value=\"Closed\">Closed</option>\n                </FormControl>\n              </Col>\n            </FormGroup>\n\n            <FormGroup>\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\n                Owner\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  name=\"owner\"\n                  value={owner}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup>\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\n                Effort\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={NumInput}\n                  name=\"effort\"\n                  value={effort}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup validationState={invalidFields.due ? \"error\" : null}>\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\n                Due\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={DateInput}\n                  onValidityChange={this.onValidityChange}\n                  name=\"due\"\n                  value={due}\n                  onChange={this.onChange}\n                  key={id}\n                />\n                <FormControl.Feedback />\n              </Col>\n            </FormGroup>\n\n            <FormGroup>\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\n                Title\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  name=\"title\"\n                  value={title}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup>\n              <Col sm={3} lg={2} componentClass={ControlLabel}>\n                Description\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  tag=\"textarea\"\n                  name=\"description\"\n                  rows={8}\n                  cols={50}\n                  value={description}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n\n            <FormGroup>\n              <Col smOffset={2} sm={6} componentClass={ControlLabel}>\n                <ButtonToolbar>\n                  <ButtonGroup>\n                    <Button\n                      bsStyle=\"primary\"\n                      type=\"submit\"\n                      disabled={!user.signedIn}\n                    >\n                      Submit\n                    </Button>\n                    <LinkContainer to=\"/issues\">\n                      <Button bsStyle=\"link\">Back</Button>\n                    </LinkContainer>\n                  </ButtonGroup>\n                </ButtonToolbar>\n              </Col>\n            </FormGroup>\n            <FormGroup>\n              <Col smOffset={2} sm={9}>\n                {validationMessage}\n              </Col>\n            </FormGroup>\n          </Form>\n        </Panel.Body>\n        <Panel.Footer>\n          <Link to={`/edit/${id - 1}`}>\n            <Badge> Previous </Badge>\n          </Link>\n          {\"  | \"}\n          <Link to={`/edit/${id + 1}`}>\n            <Badge> Next </Badge>\n          </Link>\n        </Panel.Footer>\n      </Panel>\n    );\n    return null;\n  }\n}\nIssueEdit.contextType = UserContext;\nconst IssueEditWithToast = withToast(IssueEdit);\nIssueEditWithToast.fetchData = IssueEdit.fetchData;\nexport default IssueEditWithToast;\n"],"sourceRoot":""}