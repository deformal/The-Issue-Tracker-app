{"version":3,"sources":["webpack:///./src/IssueList.jsx"],"names":["SECTION_SIZE","PageLink","params","page","activePage","children","set","React","cloneElement","disabled","search","toString","IssueList","Component","fetchData","match","showError","URLSearchParams","vars","hasSelection","selectedId","get","status","effortMin","parseInt","Number","isNaN","effortMax","id","idInt","query","data","graphQLFetch","constructor","initialData","store","List","issues","pages","issue","selectedIssue","state","loading","closeIssue","bind","deleteIssue","componentDidMount","loadData","console","log","componentDidUpdate","prevProps","location","prevSearch","prevId","props","err","setState","error","index","showSuccess","prevState","newList","issueUpdate","pathname","history","issueDelete","push","splice","undoMessage","restoreIssue","render","style","margin","hasFilter","startPage","Math","floor","endPage","prevSection","nextSection","items","i","min","Status","IssueListWithToast","withToast"],"mappings":"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","file":"server.8d0a3a9823b8e16abfe5.hot-update.js","sourcesContent":["import React from \"react\";\r\nimport IssueFilter from \"./IssueFilter.jsx\";\r\nimport { Panel, Pagination, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport store from \"./Store.js\";\r\nimport IssueTable from \"./IssueTable.jsx\";\r\nimport graphQLFetch from \"./graphQLFetch.js\";\r\nimport IssueDetail from \"./IssueDetail.jsx\";\r\nimport URLSearchParams from \"url-search-params\"; //the url search parameter are installed in here and are passed to other components\r\nimport withToast from \"./withToast.jsx\";\r\nconst SECTION_SIZE = 5;\r\n\r\nfunction PageLink({ params, page, activePage, children }) {\r\n  params.set(\"page\", page);\r\n  if (page === 0) return React.cloneElement(children, { disabled: true });\r\n  return (\r\n    <LinkContainer\r\n      isActive={() => page === activePage}\r\n      to={{ search: `?${params.toString()}` }}\r\n    >\r\n      {children}\r\n    </LinkContainer>\r\n  );\r\n}\r\n\r\nclass IssueList extends React.Component {\r\n  static async fetchData(match, search, showError) {\r\n    const params = new URLSearchParams(search);\r\n    const vars = { hasSelection: false, selectedId: 0 };\r\n    if (params.get(\"status\")) vars.status = params.get(\"status\");\r\n    const effortMin = parseInt(params.get(\"effortMin\"), 10);\r\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\r\n    const effortMax = parseInt(params.get(\"effortMax\"), 10);\r\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\r\n    let page = parseInt(params.get(\"page\"), 10);\r\n    if (Number.isNaN(page)) page = 1;\r\n    vars.page = page;\r\n\r\n    const {\r\n      params: { id },\r\n    } = match;\r\n    const idInt = parseInt(id, 10);\r\n    if (!Number.isNaN(idInt)) {\r\n      vars.hasSelection = true;\r\n      vars.selectedId = idInt;\r\n    }\r\n    const query = `query List(\r\n      $status : StatusType\r\n      $effortMin: Int\r\n      $effortMax : Int\r\n      $hasSelection : Boolean!\r\n      $selectedId : Int!\r\n      $page : Int!\r\n    ){\r\n      List(\r\n        status : $status\r\n        effortMin : $effortMin\r\n        effortMax : $effortMax\r\n        page: $page\r\n      )\r\n      { \r\n        issues\r\n        {id title status owner created effort due}\r\n        pages\r\n      }    \r\n         \r\n            issue(id : $selectedId) @include (if : $hasSelection){id description }\r\n    }`;\r\n\r\n    const data = await graphQLFetch(query, vars, showError);\r\n    return data;\r\n  }\r\n  constructor() {\r\n    super();\r\n    const initialData = store.initialData || { List: {} };\r\n    const {\r\n      List: { issues, pages },\r\n      issue: selectedIssue,\r\n    } = initialData;\r\n    delete store.initialData;\r\n    this.state = {\r\n      issues,\r\n      selectedIssue,\r\n      loading: true,\r\n      pages,\r\n    };\r\n\r\n    this.closeIssue = this.closeIssue.bind(this);\r\n    this.deleteIssue = this.deleteIssue.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { issues } = this.state;\r\n    if (issues == null) {\r\n      this.loadData();\r\n      console.log(\"the componenet is loaded\");\r\n    } else {\r\n      console.log(\"no issues\");\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    try {\r\n      const {\r\n        location: { search: prevSearch },\r\n        match: {\r\n          params: { id: prevId },\r\n        },\r\n      } = prevProps;\r\n      const {\r\n        location: { search },\r\n        match: {\r\n          params: { id },\r\n        },\r\n      } = this.props;\r\n      if (prevSearch !== search || prevId !== id) {\r\n        this.loadData();\r\n        console.log(`component did update is working fine `);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async loadData() {\r\n    try {\r\n      const {\r\n        location: { search },\r\n        match,\r\n        showError,\r\n      } = this.props;\r\n      const data = await IssueList.fetchData(match, search, showError);\r\n      if (data) {\r\n        this.setState({\r\n          issues: data.List.issues,\r\n          selectedIssue: data.issue,\r\n          pages: data.List.pages,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  async closeIssue(index) {\r\n    const { showSuccess, showError } = this.props;\r\n    const query = `mutation issueClose($id:Int!){\r\n    issueUpdate(id:$id,changes:{status:Closed}){\r\n      id title status owner effort created due description\r\n    }\r\n  }`;\r\n    const { issues } = this.state;\r\n    const data = await graphQLFetch(query, { id: issues[index].id }, showError);\r\n    if (data) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        newList[index] = data.issueUpdate;\r\n        return { issues: newList };\r\n      });\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async deleteIssue(index) {\r\n    const { showSuccess, showError } = this.props;\r\n    const query = `mutation issueDelete($id:Int!){\r\n    issueDelete(id:$id)\r\n  }`;\r\n    const { issues } = this.state;\r\n    const {\r\n      location: { pathname, search },\r\n      history,\r\n    } = this.props;\r\n    const { id } = issues[index];\r\n    const data = await graphQLFetch(query, { id }, showError);\r\n    if (data && data.issueDelete) {\r\n      this.setState((prevState) => {\r\n        const newList = [...prevState.issues];\r\n        if (pathname === `/issues/${id}`) {\r\n          history.push({ pathname: \"/issues\", search });\r\n        }\r\n        newList.splice(index, 1);\r\n        return { issues: newList };\r\n      });\r\n      const undoMessage = (\r\n        <span>\r\n          {`Deleted issue${id} successfully.`}\r\n          <Button bsStyle=\"link\" onClick={() => this.restoreIssue(id)}>\r\n            UNDO\r\n          </Button>\r\n        </span>\r\n      );\r\n      showSuccess(undoMessage);\r\n    } else {\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  async restoreIssue(id) {\r\n    const query = `mutation issueRestore($id:Int!){\r\n      issueRestore(id:$id)\r\n    }`;\r\n    const { showSuccess, showError } = this.props;\r\n    const data = await graphQLFetch(query, { id }, showError);\r\n    if (data) {\r\n      showSuccess(`issue${id} restored  successfully`);\r\n      this.loadData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { issues, pages, selectedIssue } = this.state;\r\n    const {\r\n      location: { search },\r\n    } = this.props;\r\n    if (issues == null) return null;\r\n    const style = {\r\n      margin: 30,\r\n    };\r\n\r\n    const hasFilter = location.search !== \"\";\r\n    const params = new URLSearchParams(search);\r\n    let page = parseInt(params.get(\"page\"), 10);\r\n    if (Number.isNaN(page)) page = 1;\r\n    const startPage = Math.floor((page - 1) / SECTION_SIZE) * SECTION_SIZE + 1;\r\n    const endPage = startPage + SECTION_SIZE - 1;\r\n    const prevSection = startPage === 1 ? 0 : startPage - SECTION_SIZE;\r\n    const nextSection = endPage >= pages ? 0 : startPage + SECTION_SIZE;\r\n\r\n    const items = [];\r\n    for (let i = startPage; i <= Math.min(endPage, pages); i++) {\r\n      params.set(\"page\", i);\r\n      items.push(\r\n        <PageLink key={i} params={params} activePage={page} page={i}>\r\n          <Pagination.Item>{i}</Pagination.Item>\r\n        </PageLink>\r\n      );\r\n    }\r\n    return (\r\n      <div id=\"all\">\r\n        <Panel defaultExpanded={hasFilter}>\r\n          <Panel.Heading>\r\n            <Panel.Title toggle>Filter</Panel.Title>\r\n          </Panel.Heading>\r\n          <Panel.Body collapsible>\r\n            <IssueFilter urlBase=\"/issues\" />\r\n          </Panel.Body>\r\n        </Panel>\r\n\r\n        <hr />\r\n        <IssueTable\r\n          issues={this.state.issues}\r\n          closeIssue={this.closeIssue}\r\n          stat={this.state.Status}\r\n          deleteIssue={this.deleteIssue}\r\n        />\r\n        <hr />\r\n        <IssueDetail issue={selectedIssue} />\r\n        <Pagination>\r\n          <PageLink params={params} page={prevSection}>\r\n            <Pagination.Item>{\"<\"}</Pagination.Item>\r\n          </PageLink>\r\n          {items}\r\n          <PageLink params={params} page={nextSection}>\r\n            <Pagination.Item>{\">\"}</Pagination.Item>\r\n          </PageLink>\r\n        </Pagination>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst IssueListWithToast = withToast(IssueList);\r\nIssueListWithToast.fetchData = IssueList.fetchData;\r\nexport default IssueListWithToast;\r\n"],"sourceRoot":""}